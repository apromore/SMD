<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:property-placeholder location="**/datasource-WORK.properties"/>

    <!-- Hibernate Config -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
            p:driverClass="${jdbc.driver}" p:jdbcUrl="${jdbc.url}" p:user="${jdbc.username}"
            p:password="${jdbc.password}">
        <property name="properties">
            <props>
                <prop key="InitialLimit">1</prop>                 <!-- Initial Pool Size -->
                <prop key="MinLimit">1</prop>                     <!-- Minimum Pool Size -->
                <prop key="MaxLimit">10</prop>                    <!-- Maximum Pool Size -->
                <prop key="ValidateConnection">true</prop>        <!-- Verify connection before returning to caller -->
                <prop key="PropertyCheckInterval">300</prop>      <!-- Time interval for daemon thread to enforce timeouts = 5 mins -->
                <prop key="ConnectionWaitTimeout">120</prop>      <!-- Time limit to wait for a new connection request = 2 mins -->
                <prop key="InactivityTimeout">1800</prop>         <!-- Time a non-checked out connection can remain idle = 30 mins -->
                <prop key="TimeToLiveTimeout">900</prop>          <!-- Time a checked out connection can remain idle = 15 mins -->
                <prop key="AbandonedConnectionTimeout">900</prop> <!-- Time a checked out connection can remain unused (no sql activity) = 15 mins -->
            </props>
        </property>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:persistence-xml-location="classpath:META-INF/persistence-WORK.xml" p:data-source-ref="dataSource">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                  p:databasePlatform="${jpa.database}" p:showSql="${jpa.showSql}" p:generateDdl="false"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${jpa.database}</prop>
                <prop key="hibernate.format_sql">${jpa.showSql}</prop>
                <prop key="hibernate.show_sql">${jpa.showSql}</prop>
                <prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
                <prop key="hibernate.dbcp.ps.maxIdle">${hibernate.dbcp.ps.maxIdle}</prop>
                <prop key="hibernate.statement_cache.size">${hibernate.statement_cache.size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" p:entityManagerFactory-ref="entityManagerFactory"/>

    <tx:annotation-driven proxy-target-class="true" />


    <!-- =================================================================== -->
    <!-- Hibernate JPA DAO implementation                                    -->
    <!-- =================================================================== -->
    
    <bean id="abstractDao" abstract="true" p:entityManagerFactory-ref="entityManagerFactory" />
    
    <bean id="AnnotationDao" class="org.apromore.dao.jpa.AnnotationDaoJpa"/>
    <bean id="NativeDao" class="org.apromore.dao.jpa.NativeDaoJpa" />
    <bean id="NativeTypeDao" class="org.apromore.dao.jpa.NativeTypeDaoJpa" />
    <bean id="SearchHistoryDao" class="org.apromore.dao.jpa.SearchHistoryDaoJpa" />
    <bean id="UserDao" class="org.apromore.dao.jpa.UserDaoJpa" />

    <bean id="ContentDao" class="org.apromore.dao.jpa.ContentDaoJpa">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="ProcessDao" class="org.apromore.dao.jpa.ProcessDaoJpa">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="ProcessBranchDao" class="org.apromore.dao.jpa.ProcessBranchDaoJpa">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="ProcessFragmentMapDao" class="org.apromore.dao.jpa.ProcessFragmentMapDaoJpa" />
    
    <bean id="ProcessModelVersionDao" class="org.apromore.dao.jpa.ProcessModelVersionDaoJpa">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="FragmentVersionDao" class="org.apromore.dao.jpa.FragmentVersionDaoJpa">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="FragmentVersionDagDao" class="org.apromore.dao.jpa.FragmentVersionDagDaoJpa">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="EdgeDao" class="org.apromore.dao.jpa.EdgeDaoJpa">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="NodeDao" class="org.apromore.dao.jpa.NodeDaoJpa">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="NonPocketNodeDao" class="org.apromore.dao.jpa.NonPocketNodeDaoJpa" />
    <bean id="RepositoryDao" class="org.apromore.dao.jpa.RepositoryDaoJpa" />
    
    <bean id="ClusteringDao" class="org.apromore.dao.jpa.ClusteringDaoJpa" parent="abstractDao">
    	<property name="dataSource" ref="dataSource"/>
   	</bean>

</beans>