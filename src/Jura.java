import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;


public class Jura {

//	static int[] s = new int[]{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,4,2,4,2,6,2,6,2,6,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,3,3,3,3,3,3,4,3,4,3,4,3,5,3,6,3,8,3,10,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,7,4,7,4,7,4,8,4,9,4,15,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,4,5,4,5,4,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,7,5,8,5,10,5,15,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,3,6,3,6,3,6,3,6,3,6,3,6,4,6,4,6,4,6,4,6,4,6,5,6,5,6,5,6,5,6,6,6,7,7,2,7,2,7,2,7,2,7,2,7,2,7,2,7,2,7,2,7,2,7,2,7,2,7,2,7,2,7,3,7,3,7,3,7,3,7,3,7,3,7,4,7,5,7,5,7,5,7,5,7,8,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,2,8,3,8,3,8,4,8,4,8,4,8,5,8,5,8,5,8,6,8,8,8,8,9,2,9,2,9,2,9,2,9,2,9,2,9,2,9,2,9,2,9,3,9,4,10,2,10,2,10,3,10,3,10,4,10,4,10,5,10,6,10,6,10,7,11,2,11,2,11,2,11,2,11,2,11,2,11,2,11,3,11,3,11,3,11,3,11,3,11,4,11,5,11,5,12,2,12,4,12,5,12,8,13,2,13,2,13,2,13,3,13,4,13,4,13,7,14,2,14,2,14,3,14,3,14,3,14,4,14,5,15,2,15,2,15,4,15,4,16,2,16,3,16,3,16,4,16,7,17,2,17,2,17,2,17,3,18,2,18,2,18,2,18,2,18,3,18,4,19,2,19,2,19,2,19,3,19,4,20,2,20,2,20,2,20,2,20,4,21,2,22,2,22,2,22,3,22,4,24,2,24,2,24,4,25,2,26,2,29,2,30,2,34,2};
	static int[] s = new int[]{2,2,2,2,2,2,2,3,2,3,2,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,4,2,4,2,4,2,4,2,5,2,5,2,5,2,5,2,5,2,5,2,6,2};
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		parseFile();
//		juraDefault();
	}
	
	private static void parseFile() {
		try {
			FileInputStream fstream = new FileInputStream("testAllModels-substring_s.txt");
			DataInputStream in = new DataInputStream(fstream);
			BufferedReader br = new BufferedReader(new InputStreamReader(in));
			String strLine = br.readLine();
			while (strLine != null) {
				long time = 0;
				for (int i = 0; i < 10; i++) {
					StringTokenizer st = new StringTokenizer(strLine, "\t");
					for (int j = 0; j < 10; j++) {
						String t = st.nextToken();
						if (i == 9) {
							System.out.print(t+"\t");
						}
					}
					time += Long.parseLong(st.nextToken());
					if (i == 9) {
						System.out.print((time/10.0)+"\n");
					}
					strLine = br.readLine();
				}
				
			}
			in.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private static void juraDefault() {
		int child = 0;
		int parent = 0;
		int count = 0;
		for (int i = 0; i < s.length - 1; i +=2) {
			int tmpChild = s[i];
			int tmpParent = s[i+1];
			if (tmpChild != child) {
				if(child != 0) {
					System.out.println(child + "\t"+parent+"\t"+ count);
				}
				child = tmpChild;
				parent = tmpParent;
				count = 1;
			} else if (tmpParent != parent) {
				System.out.println(child + "\t"+parent+"\t"+ count);
				parent = tmpParent;
				count = 1;
			} else {
				count++;
			}
		}
	}

}
