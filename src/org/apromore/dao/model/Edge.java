package org.apromore.dao.model;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Type;
import org.springframework.beans.factory.annotation.Configurable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Edge generated by hbm2java
 */
@Entity
@Table(name = "edge")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Configurable("edge")
public class Edge implements Serializable {

    /**
     * Hard coded for interoperability.
     */
    private static final long serialVersionUID = -9072531214638485548L;

    private Integer edgeId;
    private String cond;
    private String originalId;
    private Boolean def = false;

    private Content content;
    private Node verticesBySourceVid;
    private Node verticesByTargetVid;
    private Set<EdgeAttribute> attributes = new HashSet<EdgeAttribute>(0);


    public Edge() { }


    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "edge_id", unique = true, nullable = false)
    public Integer getEdgeId() {
        return this.edgeId;
    }

    public void setEdgeId(final Integer newEdgeId) {
        this.edgeId = newEdgeId;
    }

    @Column(name = "cond", length = 2000)
    public String getCond() {
        return this.cond;
    }

    public void setCond(final String newCond) {
        this.cond = newCond;
    }

    @Column(name = "original_Id", length = 40)
    public String getOriginalId() {
        return this.originalId;
    }

    public void setOriginalId(final String newOriginalId) {
        this.originalId = newOriginalId;
    }

    @Type(type = "boolean")
    @Column(name = "def", length = 1)
    public Boolean getDef() {
        return this.def;
    }

    public void setDef(final Boolean newDef) {
        this.def = newDef;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "content_id")
    public Content getContent() {
        return this.content;
    }

    public void setContent(final Content newContent) {
        this.content = newContent;
    }




    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "source_vid")
    public Node getVerticesBySourceVid() {
        return this.verticesBySourceVid;
    }

    public void setVerticesBySourceVid(final Node newVerticesBySourceVid) {
        this.verticesBySourceVid = newVerticesBySourceVid;
    }


    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "target_vid")
    public Node getVerticesByTargetVid() {
        return this.verticesByTargetVid;
    }

    public void setVerticesByTargetVid(final Node newVerticesByTargetVid) {
        this.verticesByTargetVid = newVerticesByTargetVid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "edge")
    public Set<EdgeAttribute> getAttributes() {
        return this.attributes;
    }

    public void setAttributes(Set<EdgeAttribute> newAttributes) {
        this.attributes = newAttributes;
    }

}


