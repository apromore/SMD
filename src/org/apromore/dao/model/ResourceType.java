package org.apromore.dao.model;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.beans.factory.annotation.Configurable;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ResourceType generated by hbm2java
 */
@Entity
@Table(name = "resource_type")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Configurable("resourceType")
public class ResourceType implements java.io.Serializable {

    private Integer id;
    private String originalId;
    private String name;
    private String configurable;

    private ProcessModelVersion processModelVersion;
    private Set<ResourceTypeAttribute> resourceTypeAttributes = new HashSet<ResourceTypeAttribute>(0);
    private Set<ResourceRefType> resourceRefTypes = new HashSet<ResourceRefType>(0);


    public ResourceType() { }


    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }


    @Column(name = "original_id", length = 40)
    public String getOriginalId() {
        return this.originalId;
    }

    public void setOriginalId(String originalId) {
        this.originalId = originalId;
    }


    @Column(name = "name")
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }


    @Column(name = "configurable", length = 1)
    public String getConfigurable() {
        return this.configurable;
    }

    public void setConfigurable(String configurable) {
        this.configurable = configurable;
    }


    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "process_model_version_id")
    public ProcessModelVersion getProcessModelVersion() {
        return this.processModelVersion;
    }

    public void setProcessModelVersion(ProcessModelVersion processModelVersion) {
        this.processModelVersion = processModelVersion;
    }


    @OneToMany(fetch = FetchType.LAZY, mappedBy = "resourceType")
    public Set<ResourceTypeAttribute> getResourceTypeAttributes() {
        return this.resourceTypeAttributes;
    }

    public void setResourceTypeAttributes(Set<ResourceTypeAttribute> resourceTypeAttributes) {
        this.resourceTypeAttributes = resourceTypeAttributes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "resourceType")
    public Set<ResourceRefType> getResourceRefTypes() {
        return this.resourceRefTypes;
    }

    public void setResourceRefTypes(Set<ResourceRefType> resourceRefTypes) {
        this.resourceRefTypes = resourceRefTypes;
    }


}


