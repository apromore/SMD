//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.10.23 at 04:10:32 PM EST 
//


package org.apromore.model;

import javax.activation.DataHandler;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlMimeType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for WriteAnnotationInputMsgType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="WriteAnnotationInputMsgType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Native" type="{http://www.w3.org/2001/XMLSchema}base64Binary"/>
 *         &lt;element name="Anf" type="{http://www.w3.org/2001/XMLSchema}base64Binary"/>
 *       &lt;/sequence>
 *       &lt;attribute name="EditSessionCode" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="AnnotationName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="IsNew" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="ProcessId" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="Version" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="CpfURI" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="NativeType" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "WriteAnnotationInputMsgType", propOrder = {
    "_native",
    "anf"
})
public class WriteAnnotationInputMsgType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Native", required = true)
    @XmlMimeType("application/octet-stream")
    protected DataHandler _native;
    @XmlElement(name = "Anf", required = true)
    @XmlMimeType("application/octet-stream")
    protected DataHandler anf;
    @XmlAttribute(name = "EditSessionCode")
    protected Integer editSessionCode;
    @XmlAttribute(name = "AnnotationName")
    protected String annotationName;
    @XmlAttribute(name = "IsNew")
    protected Boolean isNew;
    @XmlAttribute(name = "ProcessId")
    protected Integer processId;
    @XmlAttribute(name = "Version")
    protected String version;
    @XmlAttribute(name = "CpfURI")
    protected String cpfURI;
    @XmlAttribute(name = "NativeType")
    protected String nativeType;

    /**
     * Gets the value of the native property.
     * 
     * @return
     *     possible object is
     *     {@link DataHandler }
     *     
     */
    public DataHandler getNative() {
        return _native;
    }

    /**
     * Sets the value of the native property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataHandler }
     *     
     */
    public void setNative(DataHandler value) {
        this._native = value;
    }

    /**
     * Gets the value of the anf property.
     * 
     * @return
     *     possible object is
     *     {@link DataHandler }
     *     
     */
    public DataHandler getAnf() {
        return anf;
    }

    /**
     * Sets the value of the anf property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataHandler }
     *     
     */
    public void setAnf(DataHandler value) {
        this.anf = value;
    }

    /**
     * Gets the value of the editSessionCode property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getEditSessionCode() {
        return editSessionCode;
    }

    /**
     * Sets the value of the editSessionCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setEditSessionCode(Integer value) {
        this.editSessionCode = value;
    }

    /**
     * Gets the value of the annotationName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAnnotationName() {
        return annotationName;
    }

    /**
     * Sets the value of the annotationName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAnnotationName(String value) {
        this.annotationName = value;
    }

    /**
     * Gets the value of the isNew property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsNew() {
        return isNew;
    }

    /**
     * Sets the value of the isNew property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsNew(Boolean value) {
        this.isNew = value;
    }

    /**
     * Gets the value of the processId property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getProcessId() {
        return processId;
    }

    /**
     * Sets the value of the processId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setProcessId(Integer value) {
        this.processId = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Gets the value of the cpfURI property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCpfURI() {
        return cpfURI;
    }

    /**
     * Sets the value of the cpfURI property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCpfURI(String value) {
        this.cpfURI = value;
    }

    /**
     * Gets the value of the nativeType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNativeType() {
        return nativeType;
    }

    /**
     * Sets the value of the nativeType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNativeType(String value) {
        this.nativeType = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            DataHandler theNative;
            theNative = this.getNative();
            strategy.appendField(locator, this, "_native", buffer, theNative);
        }
        {
            DataHandler theAnf;
            theAnf = this.getAnf();
            strategy.appendField(locator, this, "anf", buffer, theAnf);
        }
        {
            Integer theEditSessionCode;
            theEditSessionCode = this.getEditSessionCode();
            strategy.appendField(locator, this, "editSessionCode", buffer, theEditSessionCode);
        }
        {
            String theAnnotationName;
            theAnnotationName = this.getAnnotationName();
            strategy.appendField(locator, this, "annotationName", buffer, theAnnotationName);
        }
        {
            Boolean theIsNew;
            theIsNew = this.isIsNew();
            strategy.appendField(locator, this, "isNew", buffer, theIsNew);
        }
        {
            Integer theProcessId;
            theProcessId = this.getProcessId();
            strategy.appendField(locator, this, "processId", buffer, theProcessId);
        }
        {
            String theVersion;
            theVersion = this.getVersion();
            strategy.appendField(locator, this, "version", buffer, theVersion);
        }
        {
            String theCpfURI;
            theCpfURI = this.getCpfURI();
            strategy.appendField(locator, this, "cpfURI", buffer, theCpfURI);
        }
        {
            String theNativeType;
            theNativeType = this.getNativeType();
            strategy.appendField(locator, this, "nativeType", buffer, theNativeType);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof WriteAnnotationInputMsgType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final WriteAnnotationInputMsgType that = ((WriteAnnotationInputMsgType) object);
        {
            DataHandler lhsNative;
            lhsNative = this.getNative();
            DataHandler rhsNative;
            rhsNative = that.getNative();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "_native", lhsNative), LocatorUtils.property(thatLocator, "_native", rhsNative), lhsNative, rhsNative)) {
                return false;
            }
        }
        {
            DataHandler lhsAnf;
            lhsAnf = this.getAnf();
            DataHandler rhsAnf;
            rhsAnf = that.getAnf();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "anf", lhsAnf), LocatorUtils.property(thatLocator, "anf", rhsAnf), lhsAnf, rhsAnf)) {
                return false;
            }
        }
        {
            Integer lhsEditSessionCode;
            lhsEditSessionCode = this.getEditSessionCode();
            Integer rhsEditSessionCode;
            rhsEditSessionCode = that.getEditSessionCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "editSessionCode", lhsEditSessionCode), LocatorUtils.property(thatLocator, "editSessionCode", rhsEditSessionCode), lhsEditSessionCode, rhsEditSessionCode)) {
                return false;
            }
        }
        {
            String lhsAnnotationName;
            lhsAnnotationName = this.getAnnotationName();
            String rhsAnnotationName;
            rhsAnnotationName = that.getAnnotationName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "annotationName", lhsAnnotationName), LocatorUtils.property(thatLocator, "annotationName", rhsAnnotationName), lhsAnnotationName, rhsAnnotationName)) {
                return false;
            }
        }
        {
            Boolean lhsIsNew;
            lhsIsNew = this.isIsNew();
            Boolean rhsIsNew;
            rhsIsNew = that.isIsNew();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isNew", lhsIsNew), LocatorUtils.property(thatLocator, "isNew", rhsIsNew), lhsIsNew, rhsIsNew)) {
                return false;
            }
        }
        {
            Integer lhsProcessId;
            lhsProcessId = this.getProcessId();
            Integer rhsProcessId;
            rhsProcessId = that.getProcessId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "processId", lhsProcessId), LocatorUtils.property(thatLocator, "processId", rhsProcessId), lhsProcessId, rhsProcessId)) {
                return false;
            }
        }
        {
            String lhsVersion;
            lhsVersion = this.getVersion();
            String rhsVersion;
            rhsVersion = that.getVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "version", lhsVersion), LocatorUtils.property(thatLocator, "version", rhsVersion), lhsVersion, rhsVersion)) {
                return false;
            }
        }
        {
            String lhsCpfURI;
            lhsCpfURI = this.getCpfURI();
            String rhsCpfURI;
            rhsCpfURI = that.getCpfURI();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cpfURI", lhsCpfURI), LocatorUtils.property(thatLocator, "cpfURI", rhsCpfURI), lhsCpfURI, rhsCpfURI)) {
                return false;
            }
        }
        {
            String lhsNativeType;
            lhsNativeType = this.getNativeType();
            String rhsNativeType;
            rhsNativeType = that.getNativeType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nativeType", lhsNativeType), LocatorUtils.property(thatLocator, "nativeType", rhsNativeType), lhsNativeType, rhsNativeType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            DataHandler theNative;
            theNative = this.getNative();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "_native", theNative), currentHashCode, theNative);
        }
        {
            DataHandler theAnf;
            theAnf = this.getAnf();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "anf", theAnf), currentHashCode, theAnf);
        }
        {
            Integer theEditSessionCode;
            theEditSessionCode = this.getEditSessionCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "editSessionCode", theEditSessionCode), currentHashCode, theEditSessionCode);
        }
        {
            String theAnnotationName;
            theAnnotationName = this.getAnnotationName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "annotationName", theAnnotationName), currentHashCode, theAnnotationName);
        }
        {
            Boolean theIsNew;
            theIsNew = this.isIsNew();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isNew", theIsNew), currentHashCode, theIsNew);
        }
        {
            Integer theProcessId;
            theProcessId = this.getProcessId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "processId", theProcessId), currentHashCode, theProcessId);
        }
        {
            String theVersion;
            theVersion = this.getVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "version", theVersion), currentHashCode, theVersion);
        }
        {
            String theCpfURI;
            theCpfURI = this.getCpfURI();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cpfURI", theCpfURI), currentHashCode, theCpfURI);
        }
        {
            String theNativeType;
            theNativeType = this.getNativeType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nativeType", theNativeType), currentHashCode, theNativeType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
